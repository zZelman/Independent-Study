<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="12.1">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=12
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>4</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>136</x>
      <y>12</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Class
--
_public_
--
_protected_
--
_private_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>164</x>
      <y>0</y>
      <w>44</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
is - a</panel_attributes>
    <additional_attributes>12;16;36;16</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>164</x>
      <y>12</y>
      <w>44</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
has - a</panel_attributes>
    <additional_attributes>12;16;36;16</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>136</x>
      <y>72</y>
      <w>128</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>CGame
--
_public_
CGame()
~CGame()
-
startGame() : void
stopGame()  : void
--
_private_
m_pGameWindow      : sf::RenderWindow*
m_pTestUnit        : CUnit*
m_pTestMap         : CMap*
m_pPhysicsEngine   : CPhysicsEngine* 
isRunning          : bool
isPaused           : bool
-
initWindow() : void
gameLoop() : void
input_user(sf::Event* pEvent) : void
input_gameSystem(sf::Event* pEvent) : bool
update() : void
render() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>428</x>
      <y>60</y>
      <w>168</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>CMap
--
_public_
CMap(sf::RenderWindow* pWindow,
     std::string mapPath)
~CMap()
-
getTiles() : const std::vector&lt;CTile*&gt;
getMapNum() const : sf::Vector2&lt;int&gt;
getTileSubNum() const : sf::Vector2&lt;int&gt;
getTileSize() const : sf::Vector2&lt;int&gt;
-
load() : void
update() : void
render() : void
--
_private_
m_pWindow       : sf::RenderWindow*
m_tiles         : std::vector&lt;CTile*&gt;
m_pTexture      : CTexture*
m_mapPath       : std::string
m_mapNum        : sf::Vector2&lt;int&gt;
m_tileSetPath   : std::string
m_tileSize      : sf::Vector2&lt;int&gt;
m_tileSubNum    : sf::Vector2&lt;int&gt;
-
readData(std::vector&lt;std::vector&lt;int&gt; &gt;* mapData) : void
load map(std::vector&lt;std::vector&lt;int&gt; &gt;* mapData) : void
stringToInt(std::string str) : int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>288</x>
      <y>276</y>
      <w>128</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>CPhysics
--
_public_
velosity           : sf::Vector2&lt;float&gt;
velosity_default   : sf::Vector2&lt;float&gt;
pGravityClock      : sf::Clock*
isFalling          : bool
-
CPhysics()
~CPhysics()
CPhysics(sf::Vector&lt;float&gt; defaultVelosity)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>144</x>
      <y>276</y>
      <w>128</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>CPhysicsEngine
--
_public_
CPhysicsEngine(CMap* pMap, 
               CUint* pUnit)
~CPhysicsEngine()
-
update() : void
--
_private_
m_pVector_tiles : const std::vector&lt;CTile*&gt;
m_pVector_units : const std::vector&lt;CUnit*&gt;
m_pUnit : CUnit*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>156</x>
      <y>444</y>
      <w>152</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>CSprite
--
_public_
CSprite(sf::RenderWindow* pWidnow,
        CTexture* pTexture,
        sf::Vector2&lt;int&gt; currSub)
~CSprite()
-
getRect() : sf::FloatRect
setSubImage(int row, int col) : void
setSubImage(const sf::Vector2&lt;int&gt;* newSub) : void
setPosition(float x, float y) : void
setScale(float x, float y) : void
setScale(const sf::Vector&lt;float&gt;* scale) : void
-
scale(float x, float y) : void
scale(const sf::Vector2&lt;float&gt;* scale) : void
move(float x, float y) : void
render() : void
--
_private_
m_pWindow : sf::RenderWindow*
m_pTexture : CTexture*
m_pSprite : sf::Sprite*
m_currSub : sf::Vector2&lt;int&gt;
-
chooseSubImage() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>316</x>
      <y>444</y>
      <w>156</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>CTexture
--
_public_
CTexture(std::string fileName,
    sf::Vector2&lt;int&gt; subSize,
    sf::Vector2&lt;int&gt; subNum)
~CTexture()
-
getTexture() const : cosnt sf::Texture&amp; getTexture()
setTexture(const sf::Texture&amp; texture) : void
getSubNum() const : sf::Vector2&lt;int&gt;
getSubSize() const : sf::Vector2&lt;int&gt;
-
load(std::string fileName) : void
--
_private_
m_texture : sf::Texture
m_subSize : sf::Vector2&lt;int&gt;
m_subNum  : sf::Vector2&lt;int&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>604</x>
      <y>64</y>
      <w>112</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>CTile
--
_public_
CTile(sf::RenderWindow* pWidow,
      CTexture* pTexture,
      sf::Vector2&lt;int&gt; currSub)
~CTile
-
getRect() : sf::FloatRect
-
setPosition(float x, float y) : void
-
render() : void
--
_private_
m_pSprite : CSprite*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>568</x>
      <y>280</y>
      <w>172</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>CUnit
--
_public_
m_pPhysics : CPhysics*
-
CUnit(sf::RenderWindow* pWindow,
      std::string texturePath, 
      sf::Vector2&lt;int&gt; subSize, sf::Vector2&lt;int&gt; subNum)
~CUnit()
-
isLeft() : bool
isRight() : bool
isUp() : bool
isDown() : bool
getRect() : sf::FloatRect
getSize() : sf::Vector2&lt;int&gt;
move(flat x, float y) : void
setPosition(float x, float y) : void
setPosition(const sf::Vector2&lt;float&gt;* scale) : void
scale(float x, float y) : void
scale(const sf::Vector2&lt;float&gt;* scale) : void
-
contains(const sf::Vector2&lt;float&gt;* point) const : bool
intersects(const sf::Rect&lt;float&gt;* rectangle) const : bool
load() : void
input(sf::Keyboard::Key* key, bool isPressed) : bool
update() : void
render() : void
--
_private_
m_pWindow           : sf::RenderWindow*
m_pTexture          : CTexture*
m_texturePath       : std::string
m_pSprite           : CSprite*
m_subSize           : sf::Vector2&lt;int&gt;
m_subNum            : sf::Vector2&lt;int&gt;
m_currSub           : sf::Vector&lt;int&gt;
m_pAnimationClock   : sf::Clock*
m_animTimerMS       : int64_t
isFirstUpdate       : bool
isMove_right        : bool
isMove_left         : bool
isMove_up           : bool
isMove_down         : bool
isStopped           : bool</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
